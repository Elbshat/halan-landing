function RatingComponent({ rating }) {
  const num = Math.floor(Number(rating));
  const validRating = Math.min(Math.max(num, 0), 5);

  const stars = [...Array(5)].map((_, index) => (
    <span key={index}>
      {index < validRating ? (
        <svg
          width="21"
          height="22"
          viewBox="0 0 21 22"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M20.9548 7.9523C20.89 7.76166 20.7709 7.59414 20.612 7.47044C20.4532 7.34673 20.2616 7.27225 20.0609 7.25619L14.1902 6.7897L11.6498 1.16617C11.5689 0.985051 11.4373 0.831214 11.2709 0.723229C11.1045 0.615244 10.9104 0.557726 10.712 0.557617C10.5137 0.557508 10.3195 0.614813 10.153 0.722615C9.98646 0.830417 9.8547 0.98411 9.7736 1.16514L7.23317 6.7897L1.3625 7.25619C1.16525 7.27181 0.976688 7.34393 0.819358 7.46392C0.662027 7.58391 0.542597 7.74668 0.475353 7.93277C0.40811 8.11886 0.395902 8.32038 0.440189 8.51322C0.484476 8.70606 0.583383 8.88206 0.725078 9.02017L5.06346 13.2494L3.52912 19.8934C3.48253 20.0945 3.49746 20.305 3.57198 20.4975C3.64649 20.69 3.77715 20.8557 3.947 20.9731C4.11685 21.0904 4.31804 21.154 4.52447 21.1556C4.7309 21.1571 4.93304 21.0966 5.10465 20.9819L10.7117 17.2438L16.3188 20.9819C16.4942 21.0983 16.701 21.1583 16.9115 21.1537C17.122 21.1491 17.3261 21.0801 17.4962 20.9561C17.6663 20.832 17.7944 20.6589 17.8632 20.4599C17.9319 20.2609 17.9381 20.0456 17.8809 19.843L15.9975 13.2525L20.6685 9.049C20.9743 8.77302 21.0866 8.34258 20.9548 7.9523Z"
            fill="#F2C94C"
          />
        </svg>
      ) : (
        <svg
          width="22"
          height="22"
          viewBox="0 0 22 22"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M5.34965 13.2494L3.81531 19.8934C3.76779 20.0946 3.78206 20.3054 3.85623 20.4984C3.93041 20.6913 4.06105 20.8574 4.23109 20.975C4.40113 21.0925 4.60267 21.1561 4.80939 21.1573C5.0161 21.1585 5.21838 21.0974 5.38981 20.9819L10.9969 17.2438L16.6039 20.9819C16.7793 21.0983 16.9862 21.1583 17.1967 21.1537C17.4072 21.149 17.6112 21.0801 17.7813 20.956C17.9515 20.832 18.0795 20.6588 18.1483 20.4598C18.2171 20.2608 18.2233 20.0456 18.1661 19.8429L16.2826 13.2525L20.9536 9.04897C21.1032 8.91427 21.2101 8.73867 21.2609 8.54389C21.3118 8.34911 21.3044 8.14369 21.2398 7.95304C21.1752 7.76239 21.056 7.59487 20.8972 7.4712C20.7384 7.34752 20.5468 7.27312 20.3461 7.25719L14.4754 6.78968L11.935 1.16615C11.854 0.985068 11.7223 0.831304 11.5558 0.72341C11.3894 0.615517 11.1952 0.558105 10.9969 0.558105C10.7985 0.558105 10.6044 0.615517 10.4379 0.72341C10.2714 0.831304 10.1398 0.985068 10.0588 1.16615L7.51833 6.78968L1.64766 7.25616C1.45041 7.27178 1.26184 7.3439 1.10451 7.46389C0.947184 7.58388 0.827753 7.74665 0.76051 7.93274C0.693266 8.11883 0.681058 8.32035 0.725345 8.51319C0.769632 8.70604 0.868539 8.88204 1.01023 9.02014L5.34965 13.2494ZM8.28756 8.79462C8.47137 8.78014 8.64789 8.71648 8.79863 8.61031C8.94937 8.50414 9.06878 8.35937 9.14432 8.19118L10.9969 4.0917L12.8494 8.19118C12.925 8.35937 13.0444 8.50414 13.1951 8.61031C13.3458 8.71648 13.5224 8.78014 13.7062 8.79462L17.7964 9.119L14.428 12.1506C14.1356 12.4142 14.0192 12.82 14.1263 13.1989L15.4166 17.7144L11.5694 15.1493C11.4005 15.0359 11.2018 14.9754 10.9984 14.9754C10.795 14.9754 10.5963 15.0359 10.4274 15.1493L6.40722 17.8298L7.48847 13.1485C7.52811 12.9763 7.52279 12.7968 7.47301 12.6273C7.42324 12.4578 7.33069 12.3039 7.20425 12.1805L4.07583 9.13032L8.28756 8.79462Z"
            fill="#F2C94C"
          />
        </svg>
      )}
    </span>
  ));

  return (
    <div className="flex min-h-8 items-center gap-3 font-medium">
      <span className="mb-1 flex items-center gap-2">{stars}</span>
      {rating.includes(".") ? rating.replace(".", ",") : rating}
    </div>
  );
}

export default RatingComponent;
